scalar Time

type Message {
  id: String!
  user: String!
  createdAt: Time!
  text: String!
}

type Mutation {
  postMessage(room: String!, user: String!, text: String!): Message
  publishStream(user: String!, sdp: String!): String!
  watchStream(stream: String!, user: String!, sdp: String!): String!
}

type Query {
  rooms: [String!]!
  watchers(room: String!): [String!]!
}

type RAMUsage {
  total: Int!
  used: Int!
  usedPercent: Float!
}

type ServerUsage {
  cpu: [Float!]!
  ram: RAMUsage!
}

type Subscription {
  messagePosted(room: String): Message!
  serverLoad: ServerUsage!
  roomAdded: String!
  roomDeleted: String!
  watcherJoined(room: String!): String!
  watcherDisconnected(room: String!): String!
}
